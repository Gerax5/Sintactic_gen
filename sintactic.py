# sintactic.py – Analizador SLR(1) generado automáticamente
# *Archivo autónomo; no requiere las librerías del generador.*

import sys
from collections import deque

# ACTION: (estado, token) -> acción ('sN' / 'rM' / 'acc')
ACTION = {0: {'DEF': 's1', 'FOR': 's2', 'IDENTIFICADOR': 's3', 'IF': 's4', 'PRINT': 's5', 'RETURN': 's6', 'WHILE': 's7'}, 1: {'IDENTIFICADOR': 's14'}, 2: {'IDENTIFICADOR': 's15'}, 3: {'ASIGNACION': 's16'}, 4: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 5: {'PARENTESIS_IZQUIERDO': 's25'}, 6: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 7: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 11: {'DEF': 's1', 'FOR': 's2', 'IDENTIFICADOR': 's3', 'IF': 's4', 'PRINT': 's5', 'RETURN': 's6', 'WHILE': 's7', '$': 'acc'}, 14: {'PARENTESIS_IZQUIERDO': 's29'}, 15: {'IN': 's30'}, 16: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 18: {'PARENTESIS_IZQUIERDO': 's32', 'DIVISION': 'r24', 'IF': 'r24', 'IDENTIFICADOR': 'r24', 'DEF': 'r24', 'MULTIPLICACION': 'r24', 'FOR': 'r24', 'RETURN': 'r24', 'DOS_PUNTOS': 'r24', 'SUMA': 'r24', 'WHILE': 'r24', 'COMA': 'r24', '$': 'r24', 'PRINT': 'r24', 'RESTA': 'r24', 'PARENTESIS_DERECHO': 'r24'}, 20: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 22: {'DOS_PUNTOS': 's34', 'RESTA': 's35', 'SUMA': 's36'}, 24: {'DIVISION': 's37', 'MULTIPLICACION': 's38', 'IF': 'r17', 'IDENTIFICADOR': 'r17', 'DEF': 'r17', 'FOR': 'r17', 'RETURN': 'r17', 'DOS_PUNTOS': 'r17', 'SUMA': 'r17', 'WHILE': 'r17', 'COMA': 'r17', '$': 'r17', 'PRINT': 'r17', 'RESTA': 'r17', 'PARENTESIS_DERECHO': 'r17'}, 25: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 26: {'RESTA': 's35', 'SUMA': 's36', 'WHILE': 'r12', 'IF': 'r12', 'IDENTIFICADOR': 'r12', 'DEF': 'r12', '$': 'r12', 'FOR': 'r12', 'PRINT': 'r12', 'RETURN': 'r12'}, 27: {'DOS_PUNTOS': 's41', 'RESTA': 's35', 'SUMA': 's36'}, 29: {'IDENTIFICADOR': 's42'}, 30: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 31: {'RESTA': 's35', 'SUMA': 's36', 'WHILE': 'r6', 'IF': 'r6', 'IDENTIFICADOR': 'r6', 'DEF': 'r6', '$': 'r6', 'FOR': 'r6', 'PRINT': 'r6', 'RETURN': 'r6'}, 32: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 33: {'PARENTESIS_DERECHO': 's47', 'RESTA': 's35', 'SUMA': 's36'}, 35: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 36: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 37: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 38: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 39: {'PARENTESIS_DERECHO': 's52'}, 40: {'COMA': 's53', 'RESTA': 's35', 'SUMA': 's36', 'PARENTESIS_DERECHO': 'r29'}, 42: {'COMA': 's54', 'PARENTESIS_DERECHO': 'r13'}, 43: {'PARENTESIS_DERECHO': 's55'}, 44: {'DOS_PUNTOS': 's56', 'RESTA': 's35', 'SUMA': 's36'}, 45: {'PARENTESIS_DERECHO': 's57'}, 46: {'COMA': 's58', 'RESTA': 's35', 'SUMA': 's36', 'PARENTESIS_DERECHO': 'r21'}, 48: {'DIVISION': 's37', 'MULTIPLICACION': 's38', 'IF': 'r16', 'IDENTIFICADOR': 'r16', 'DEF': 'r16', 'FOR': 'r16', 'RETURN': 'r16', 'DOS_PUNTOS': 'r16', 'SUMA': 'r16', 'WHILE': 'r16', 'COMA': 'r16', '$': 'r16', 'PRINT': 'r16', 'RESTA': 'r16', 'PARENTESIS_DERECHO': 'r16'}, 49: {'DIVISION': 's37', 'MULTIPLICACION': 's38', 'IF': 'r15', 'IDENTIFICADOR': 'r15', 'DEF': 'r15', 'FOR': 'r15', 'RETURN': 'r15', 'DOS_PUNTOS': 'r15', 'SUMA': 'r15', 'WHILE': 'r15', 'COMA': 'r15', '$': 'r15', 'PRINT': 'r15', 'RESTA': 'r15', 'PARENTESIS_DERECHO': 'r15'}, 53: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 54: {'IDENTIFICADOR': 's42'}, 55: {'DOS_PUNTOS': 's61'}, 58: {'DIGITO': 's17', 'IDENTIFICADOR': 's18', 'NUMERO_CON_DECIMAL': 's19', 'PARENTESIS_IZQUIERDO': 's20', 'STRING': 's21'}, 8: {'WHILE': 'r2', 'IF': 'r2', 'IDENTIFICADOR': 'r2', 'DEF': 'r2', '$': 'r2', 'FOR': 'r2', 'PRINT': 'r2', 'RETURN': 'r2'}, 9: {'WHILE': 'r3', 'IF': 'r3', 'IDENTIFICADOR': 'r3', 'DEF': 'r3', '$': 'r3', 'FOR': 'r3', 'PRINT': 'r3', 'RETURN': 'r3'}, 10: {'WHILE': 'r4', 'IF': 'r4', 'IDENTIFICADOR': 'r4', 'DEF': 'r4', '$': 'r4', 'FOR': 'r4', 'PRINT': 'r4', 'RETURN': 'r4'}, 12: {'WHILE': 'r5', 'IF': 'r5', 'IDENTIFICADOR': 'r5', 'DEF': 'r5', '$': 'r5', 'FOR': 'r5', 'PRINT': 'r5', 'RETURN': 'r5'}, 13: {'WHILE': 'r1', 'IF': 'r1', 'IDENTIFICADOR': 'r1', 'DEF': 'r1', '$': 'r1', 'FOR': 'r1', 'PRINT': 'r1', 'RETURN': 'r1'}, 17: {'DIVISION': 'r26', 'IF': 'r26', 'IDENTIFICADOR': 'r26', 'DEF': 'r26', 'MULTIPLICACION': 'r26', 'FOR': 'r26', 'RETURN': 'r26', 'DOS_PUNTOS': 'r26', 'SUMA': 'r26', 'WHILE': 'r26', 'COMA': 'r26', '$': 'r26', 'PRINT': 'r26', 'RESTA': 'r26', 'PARENTESIS_DERECHO': 'r26'}, 19: {'DIVISION': 'r25', 'IF': 'r25', 'IDENTIFICADOR': 'r25', 'DEF': 'r25', 'MULTIPLICACION': 'r25', 'FOR': 'r25', 'RETURN': 'r25', 'DOS_PUNTOS': 'r25', 'SUMA': 'r25', 'WHILE': 'r25', 'COMA': 'r25', '$': 'r25', 'PRINT': 'r25', 'RESTA': 'r25', 'PARENTESIS_DERECHO': 'r25'}, 21: {'DIVISION': 'r27', 'IF': 'r27', 'IDENTIFICADOR': 'r27', 'DEF': 'r27', 'MULTIPLICACION': 'r27', 'FOR': 'r27', 'RETURN': 'r27', 'DOS_PUNTOS': 'r27', 'SUMA': 'r27', 'WHILE': 'r27', 'COMA': 'r27', '$': 'r27', 'PRINT': 'r27', 'RESTA': 'r27', 'PARENTESIS_DERECHO': 'r27'}, 23: {'DIVISION': 'r20', 'IF': 'r20', 'IDENTIFICADOR': 'r20', 'DEF': 'r20', 'MULTIPLICACION': 'r20', 'FOR': 'r20', 'RETURN': 'r20', 'DOS_PUNTOS': 'r20', 'SUMA': 'r20', 'WHILE': 'r20', 'COMA': 'r20', '$': 'r20', 'PRINT': 'r20', 'RESTA': 'r20', 'PARENTESIS_DERECHO': 'r20'}, 28: {'WHILE': 'r0', 'IF': 'r0', 'IDENTIFICADOR': 'r0', 'DEF': 'r0', '$': 'r0', 'FOR': 'r0', 'PRINT': 'r0', 'RETURN': 'r0'}, 34: {'WHILE': 'r9', 'IF': 'r9', 'IDENTIFICADOR': 'r9', 'DEF': 'r9', '$': 'r9', 'FOR': 'r9', 'PRINT': 'r9', 'RETURN': 'r9'}, 41: {'WHILE': 'r10', 'IF': 'r10', 'IDENTIFICADOR': 'r10', 'DEF': 'r10', '$': 'r10', 'FOR': 'r10', 'PRINT': 'r10', 'RETURN': 'r10'}, 47: {'DIVISION': 'r23', 'IF': 'r23', 'IDENTIFICADOR': 'r23', 'DEF': 'r23', 'MULTIPLICACION': 'r23', 'FOR': 'r23', 'RETURN': 'r23', 'DOS_PUNTOS': 'r23', 'SUMA': 'r23', 'WHILE': 'r23', 'COMA': 'r23', '$': 'r23', 'PRINT': 'r23', 'RESTA': 'r23', 'PARENTESIS_DERECHO': 'r23'}, 50: {'DIVISION': 'r19', 'IF': 'r19', 'IDENTIFICADOR': 'r19', 'DEF': 'r19', 'MULTIPLICACION': 'r19', 'FOR': 'r19', 'RETURN': 'r19', 'DOS_PUNTOS': 'r19', 'SUMA': 'r19', 'WHILE': 'r19', 'COMA': 'r19', '$': 'r19', 'PRINT': 'r19', 'RESTA': 'r19', 'PARENTESIS_DERECHO': 'r19'}, 51: {'DIVISION': 'r18', 'IF': 'r18', 'IDENTIFICADOR': 'r18', 'DEF': 'r18', 'MULTIPLICACION': 'r18', 'FOR': 'r18', 'RETURN': 'r18', 'DOS_PUNTOS': 'r18', 'SUMA': 'r18', 'WHILE': 'r18', 'COMA': 'r18', '$': 'r18', 'PRINT': 'r18', 'RESTA': 'r18', 'PARENTESIS_DERECHO': 'r18'}, 52: {'WHILE': 'r11', 'IF': 'r11', 'IDENTIFICADOR': 'r11', 'DEF': 'r11', '$': 'r11', 'FOR': 'r11', 'PRINT': 'r11', 'RETURN': 'r11'}, 56: {'WHILE': 'r8', 'IF': 'r8', 'IDENTIFICADOR': 'r8', 'DEF': 'r8', '$': 'r8', 'FOR': 'r8', 'PRINT': 'r8', 'RETURN': 'r8'}, 57: {'DIVISION': 'r28', 'IF': 'r28', 'IDENTIFICADOR': 'r28', 'DEF': 'r28', 'MULTIPLICACION': 'r28', 'FOR': 'r28', 'RETURN': 'r28', 'DOS_PUNTOS': 'r28', 'SUMA': 'r28', 'WHILE': 'r28', 'COMA': 'r28', '$': 'r28', 'PRINT': 'r28', 'RESTA': 'r28', 'PARENTESIS_DERECHO': 'r28'}, 59: {'PARENTESIS_DERECHO': 'r30'}, 60: {'PARENTESIS_DERECHO': 'r14'}, 61: {'WHILE': 'r7', 'IF': 'r7', 'IDENTIFICADOR': 'r7', 'DEF': 'r7', '$': 'r7', 'FOR': 'r7', 'PRINT': 'r7', 'RETURN': 'r7'}, 62: {'PARENTESIS_DERECHO': 'r22'}}

# GOTO: (estado, NoTerminal) -> estado
GOTO = {0: {'asignacion': 8, 'estructura_control': 9, 'llamada_print': 10, 'programa': 11, 'retorno': 12, 'sentencia': 13}, 4: {'expresion': 22, 'factor': 23, 'termino': 24}, 6: {'expresion': 26, 'factor': 23, 'termino': 24}, 7: {'expresion': 27, 'factor': 23, 'termino': 24}, 11: {'asignacion': 8, 'estructura_control': 9, 'llamada_print': 10, 'retorno': 12, 'sentencia': 28}, 16: {'expresion': 31, 'factor': 23, 'termino': 24}, 20: {'expresion': 33, 'factor': 23, 'termino': 24}, 25: {'argumentos_print': 39, 'expresion': 40, 'factor': 23, 'termino': 24}, 29: {'parametros': 43}, 30: {'expresion': 44, 'factor': 23, 'termino': 24}, 32: {'argumentos': 45, 'expresion': 46, 'factor': 23, 'termino': 24}, 35: {'factor': 23, 'termino': 48}, 36: {'factor': 23, 'termino': 49}, 37: {'factor': 50}, 38: {'factor': 51}, 53: {'argumentos_print': 59, 'expresion': 40, 'factor': 23, 'termino': 24}, 54: {'parametros': 60}, 58: {'argumentos': 62, 'expresion': 46, 'factor': 23, 'termino': 24}}

PRODUCTIONS = {'programa': [['programa', 'sentencia'], ['sentencia']], 'sentencia': [['asignacion'], ['estructura_control'], ['llamada_print'], ['retorno']], 'asignacion': [['IDENTIFICADOR', 'ASIGNACION', 'expresion']], 'estructura_control': [['DEF', 'IDENTIFICADOR', 'PARENTESIS_IZQUIERDO', 'parametros', 'PARENTESIS_DERECHO', 'DOS_PUNTOS'], ['FOR', 'IDENTIFICADOR', 'IN', 'expresion', 'DOS_PUNTOS'], ['IF', 'expresion', 'DOS_PUNTOS'], ['WHILE', 'expresion', 'DOS_PUNTOS']], 'llamada_print': [['PRINT', 'PARENTESIS_IZQUIERDO', 'argumentos_print', 'PARENTESIS_DERECHO']], 'retorno': [['RETURN', 'expresion']], 'parametros': [['IDENTIFICADOR'], ['IDENTIFICADOR', 'COMA', 'parametros']], 'expresion': [['expresion', 'SUMA', 'termino'], ['expresion', 'RESTA', 'termino'], ['termino']], 'termino': [['termino', 'MULTIPLICACION', 'factor'], ['termino', 'DIVISION', 'factor'], ['factor']], 'argumentos': [['expresion'], ['expresion', 'COMA', 'argumentos']], 'factor': [['PARENTESIS_IZQUIERDO', 'expresion', 'PARENTESIS_DERECHO'], ['IDENTIFICADOR'], ['NUMERO_CON_DECIMAL'], ['DIGITO'], ['STRING'], ['IDENTIFICADOR', 'PARENTESIS_IZQUIERDO', 'argumentos', 'PARENTESIS_DERECHO']], 'argumentos_print': [['expresion'], ['expresion', 'COMA', 'argumentos_print']], "programa'": [['programa']]}
START_SYMBOL = "programa'"


def parse(token_stream):
    tokens = list(token_stream) + [('$', '$', -1)]
    stack = [0]
    i = 0
    errors = []
    producciones_numeradas = []
    for lhs, reglas in PRODUCTIONS.items():
        for regla in reglas:
            producciones_numeradas.append((lhs, regla))

    while True:
        state = stack[-1]
        tok, lex, line = tokens[i]
        act = ACTION.get(int(state), {}).get(tok)
        if act is None:
            errors.append(f"Error de sintaxis en la línea {line if line!=-1 else '?'}: token inesperado '{tok}' (lexema: '{lex}').")
            return False, errors
        if act == 'acc':
            return True, errors
        if act.startswith('s'):
            # stack.extend([tok, int(act[1:])])
            stack.append(act[1:])  # Agregar solo el estado, no el token
            i += 1
            continue
        if act.startswith('r'):
            prod = int(act[1:])
            head, blen = producciones_numeradas[prod]
            for _ in blen:
                stack.pop()
            newState = int(stack[-1])
            goto_state = GOTO[newState][head]
            if goto_state is None:
                errors.append(f"Error interno del analizador: no se encontró una transición válida (GOTO) para el símbolo {head} desde {stack[-1]}")
                return False, errors
            stack.append(goto_state)
            continue
        errors.append(f"Acción desconocida: {act}")
        return False, errors
